% Auto-generated by cameraCalibrator app on 26-Sep-2019
%-------------------------------------------------------


% Define images to process
imageFileNames = {'./calibration_images//Image150.png',...
    './calibration_images//Image153.png',...
    './calibration_images//Image159.png',...
    './calibration_images//Image160.png',...
    './calibration_images//Image161.png',...
    './calibration_images//Image162.png',...
    './calibration_images//Image163.png',...
    './calibration_images//Image168.png',...
    './calibration_images//Image169.png',...
    './calibration_images//Image170.png',...
    './calibration_images//Image174.png',...
    './calibration_images//Image178.png',...
    './calibration_images//Image179.png',...
    './calibration_images//Image181.png',...
    './calibration_images//Image182.png',...
    './calibration_images//Image183.png',...
    './calibration_images//Image199.png',...
    './calibration_images//Image205.png',...
    './calibration_images//Image208.png',...
    './calibration_images//Image225.png',...
    './calibration_images//Image226.png',...
    './calibration_images//Image231.png',...
    './calibration_images//Image232.png',...
    './calibration_images//Image233.png',...
    './calibration_images//Image234.png',...
    './calibration_images//Image235.png',...
    './calibration_images//Image236.png',...
    './calibration_images//Image270.png',...
    './calibration_images//Image271.png',...
    './calibration_images//Image272.png',...
    './calibration_images//Image275.png',...
    './calibration_images//Image276.png',...
    './calibration_images//Image277.png',...
    './calibration_images//Image278.png',...
    './calibration_images//Image279.png',...
    './calibration_images//Image280.png',...
    './calibration_images//Image281.png',...
    './calibration_images//Image282.png',...
    };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 12;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
